{"version":3,"sources":["SingerProfile.js","App.js","reportWebVitals.js","index.js"],"names":["SingerProfile","content","this","props","profile","className","name","amazing_level","country","React","Component","App","state","all","row","that","axios","get","process","then","res","setState","data","catch","err","console","log","id","amazingLevel","params","URLSearchParams","append","post","delete","table","update","runTests","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuBeA,E,4JAnBb,WACE,IAAIC,EAAU,iBAYd,OAVGC,KAAKC,MAAMC,UACZH,EACE,sBAAKI,UAAU,oBAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BH,KAAKC,MAAMC,QAAQE,OAChD,qBAAKD,UAAU,qBAAf,SAAqCH,KAAKC,MAAMC,QAAQG,gBACxD,qBAAKF,UAAU,gBAAf,SAAgCH,KAAKC,MAAMC,QAAQI,cAMvD,qBAAKH,UAAU,gBAAf,SAAgCJ,Q,GAfVQ,IAAMC,W,gBC4KnBC,E,kDAzKb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,IAAK,KACLC,IAAK,MAJU,E,uCAoBnB,WACE,IAAIC,EAAOb,KACX,OAAOc,IAAMC,IAAIC,kDACdC,MAAK,SAASC,GAGb,OADAL,EAAKM,SAAS,CAACR,IAAKO,EAAIE,KAAKA,OACtBF,EAAIE,KAAKA,QAEjBC,OAAM,SAASC,GAEd,OADAC,QAAQC,IAAIF,GACL,U,iBAIb,SAAIG,GACF,IAAIZ,EAAOb,KACX,OAAOc,IAAMC,IAAN,UAAaC,wCAAb,wBAAsDS,IAC1DR,MAAK,SAASC,GAGb,OADAL,EAAKM,SAAS,CAACP,IAAKM,EAAIE,KAAKA,OACtBF,EAAIE,KAAKA,QAEjBC,OAAM,SAASC,GAEd,OADAC,QAAQC,IAAIF,GACL,U,oBAIb,SAAOG,EAAIrB,EAAMsB,EAAcpB,GAC7B,IAAIO,EAAOb,KACP2B,EAAS,IAAIC,gBAKjB,OAJAD,EAAOE,OAAO,OAAQzB,GACtBuB,EAAOE,OAAO,gBAAiBH,GAC/BC,EAAOE,OAAO,UAAWvB,GAElBQ,IAAMgB,KAAN,UAAcd,wCAAd,wBAAuDS,GAAME,GACjEV,MAAK,SAASC,GACb,IAAIE,EAAO,CAACK,GAAIA,EAAIrB,KAAMA,EAAMC,cAAeqB,EAAcpB,QAASA,GAEtE,OADAO,EAAKM,SAAS,CAACP,IAAKQ,IACbA,KAERC,OAAM,SAASC,GAEd,OADAC,QAAQC,IAAIF,GACL,U,oBAIb,SAAOG,GACL,IAAIZ,EAAOb,KACX,OAAOc,IAAMiB,OAAN,UAAgBf,wCAAhB,wBAAyDS,GAAM,IACnER,MAAK,SAASC,GAEb,OADAL,EAAKM,SAAS,CAACP,IAAK,OACbM,EAAIE,KAAKA,QAEjBC,OAAM,SAASC,GAEd,OADAC,QAAQC,IAAIF,GACL,U,oBAIb,SAAOlB,EAAMsB,EAAcpB,GACzB,IAAIO,EAAOb,KACP2B,EAAS,IAAIC,gBAKjB,OAJAD,EAAOE,OAAO,OAAQzB,GACtBuB,EAAOE,OAAO,gBAAiBH,GAC/BC,EAAOE,OAAO,UAAWvB,GAElBQ,IAAMgB,KAAN,UAAcd,wCAAd,aAAoDW,GACxDV,MAAK,SAASC,GACb,IAAIE,EAAO,CAAChB,KAAMA,EAAMC,cAAeqB,EAAcpB,QAASA,GAE9D,OADAO,EAAKM,SAAS,CAACP,IAAKQ,IACbA,KAERC,OAAM,SAASC,GAEd,OADAC,QAAQC,IAAIF,GACL,U,sBAIb,WAWEC,QAAQC,IAAI,0BACZxB,KAAKe,IAAI,GACNE,MAAK,SAASC,GACbK,QAAQS,MAAMd,MAEfG,OAAM,SAASC,GACdC,QAAQC,IAAI,UACZD,QAAQS,MAAMV,MAGlBC,QAAQC,IAAI,6BACZxB,KAAKiC,OAAO,EAAG,YAAa,EAAG,UAC5BhB,MAAK,SAASC,GACbK,QAAQS,MAAMd,MAEfG,OAAM,SAASC,GACdC,QAAQC,IAAI,UACZD,QAAQS,MAAMV,MAGlBC,QAAQC,IAAI,sBACZxB,KAAKW,MACFM,MAAK,SAASC,GACbK,QAAQS,MAAMd,MAEfG,OAAM,SAASC,GACdC,QAAQC,IAAI,UACZD,QAAQS,MAAMV,Q,+BAkBpB,WACEtB,KAAKkC,a,oBAGP,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAeD,QAASF,KAAKU,MAAME,a,GApKzBL,IAAMC,WCOT2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.550f336b.chunk.js","sourcesContent":["import './SingerProfile.css';\nimport React from 'react';\n\nclass SingerProfile extends React.Component {\n  render() {\n    let content = \"Please wait...\";\n\n    if(this.props.profile) {\n      content = (\n        <div className=\"SingerProfileData\">\n          <div className=\"SingerName\">{this.props.profile.name}</div>\n          <div className=\"SingerAmazingLevel\">{this.props.profile.amazing_level}</div>\n          <div className=\"SingerCountry\">{this.props.profile.country}</div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"SingerProfile\">{content}</div>\n    );\n  }\n}\n\nexport default SingerProfile;\n","import './App.css';\nimport SingerProfile from './SingerProfile';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: null, \n      row: null,\n    };\n  }\n\n  //  This example shows us how to get data from our database\n  //  Note: in order for this to work, you need to deploy this\n  //  application at least once, so that `public/data.php` exists\n  //  on Heroku. It uses a library called axios. Think of this\n  //  as an alternative to jQuery's .get, .post\n  //  https://www.npmjs.com/package/axios#example\n\n  //  Typically speaking, you'd want to abstract the following\n  //  methods into a different component, specifically to handle\n  //  requests to the API. This gives you a quick way to jump\n  //  in and get started.\n\n  all() {\n    let that = this;  //  \"this\" changes inside of the then() function, so we'll save a reference to it\n    return axios.get(process.env.REACT_APP_URL + '/data.php')\n      .then(function(res) {\n        //  We'll set our local state to the rows returned from the example\n        that.setState({all: res.data.data});\n        return res.data.data;\n      })\n      .catch(function(err) {\n        console.log(err);\n        return null;\n      });\n  }\n\n  get(id) {\n    let that = this;  //  \"this\" changes inside of the then() function, so we'll save a reference to it\n    return axios.get(`${process.env.REACT_APP_URL}/data.php?id=${id}`)\n      .then(function(res) {\n        //  We'll set our local state to the row returned from the example\n        that.setState({row: res.data.data});\n        return res.data.data;\n      })\n      .catch(function(err) {\n        console.log(err);\n        return null;\n      });\n  }\n\n  update(id, name, amazingLevel, country) {\n    let that = this;  //  \"this\" changes inside of the then() function, so we'll save a reference to it\n    let params = new URLSearchParams();\n    params.append('name', name);\n    params.append('amazing_level', amazingLevel);\n    params.append('country', country);\n    \n    return axios.post(`${process.env.REACT_APP_URL}/data.php?id=${id}`, params)\n      .then(function(res) {\n        let data = {id: id, name: name, amazing_level: amazingLevel, country: country};\n        that.setState({row: data});\n        return data;\n      })\n      .catch(function(err) {\n        console.log(err);\n        return null;\n      });\n  }\n\n  delete(id) {\n    let that = this;  //  \"this\" changes inside of the then() function, so we'll save a reference to it\n    return axios.delete(`${process.env.REACT_APP_URL}/data.php?id=${id}`, {})\n      .then(function(res) {\n        that.setState({row: null});\n        return res.data.data;\n      })\n      .catch(function(err) {\n        console.log(err);\n        return null;\n      });\n  }\n\n  create(name, amazingLevel, country) {\n    let that = this;  //  \"this\" changes inside of the then() function, so we'll save a reference to it\n    let params = new URLSearchParams();\n    params.append('name', name);\n    params.append('amazing_level', amazingLevel);\n    params.append('country', country);\n\n    return axios.post(`${process.env.REACT_APP_URL}/data.php`, params)\n      .then(function(res) {\n        let data = {name: name, amazing_level: amazingLevel, country: country};\n        that.setState({row: data});\n        return data;\n      })\n      .catch(function(err) {\n        console.log(err);\n        return null;\n      });\n  }\n\n  runTests() {\n    // console.log(\"Test: create a single row\");\n    // this.create(\"Robyn\", 10, \"Denmark\")\n    //   .then(function(res) {\n    //     console.table(res);\n    //   })\n    //   .catch(function(err) {\n    //     console.log(\"Failed\");\n    //     console.table(err);\n    //   });\n\n    console.log(\"Test: get a single row\");\n    this.get(3)\n      .then(function(res) {\n        console.table(res);\n      })\n      .catch(function(err) {\n        console.log(\"Failed\");\n        console.table(err);\n      });\n\n    console.log(\"Test: update a single row\");\n    this.update(3, \"Vengaboys\", 7, \"Brazil\")\n      .then(function(res) {\n        console.table(res);\n      })\n      .catch(function(err) {\n        console.log(\"Failed\");\n        console.table(err);\n      });\n\n    console.log(\"Test: get all rows\");\n    this.all()\n      .then(function(res) {\n        console.table(res);\n      })\n      .catch(function(err) {\n        console.log(\"Failed\");\n        console.table(err);\n      });\n\n    // console.log(\"Test: delete a single row\");\n    // this.delete(7)\n    //   .then(function(res) {\n    //     console.log(res);\n    //   })\n    //   .catch(function(err) {\n    //     console.log(\"Failed\");\n    //     console.table(err);\n    //   });\n\n  }\n\n  //  componentDidMount runs when React has finished loading\n  //  and rendering the component. A great time to try to\n  //  get data.\n  componentDidMount() {\n    this.runTests();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Artist Spotlight</h3>\n        <SingerProfile profile={this.state.row} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}